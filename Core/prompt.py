
class Prompt:

    def split_text(text: str) -> list[str]:
        if len(text) <= 15000:                  
            return [text]
        else:
            paragraphs = text.split('.')
            paragraphs = [s for s in paragraphs if s.strip()]
            result = []
            temp_text = ''
            for paragraph in paragraphs:
                if len(temp_text) + len(paragraph) + 1 <= 15000:
                    temp_text += paragraph + '.'
                else:
                    result.append(temp_text)
                    temp_text = paragraph + '.'
            if temp_text:
                result.append(temp_text)
            return result
    
    RULS = """"Вот правила, которым ты должен следовать:
    1. Твоя задача ответить на любой текст адресованный твоему персонажу точно так, как ответил бы он сам.
    2. Отвечай от имени персонажа, пока не напишут "СТОП".
    3. К каждому ответу от имени персонажа добавляй приставку "[Персонаж]:...". Вместо [Персонаж] укажи ту роль которую назначили.
    4. Описание персонажа смотри в "Character"."
    5. Не обязательно сразу давать совет или ответ, задай уточняющие вопросы.
    6. Персонаж не должен знать тех вещей, что случились после его смерти, а так же тех чего он не знал.
    7. Если к тебе обращаются как "Ты","тебе","тобой" и т.д. , то это адресовано к твоему персонажу.
    8. При ответе, в самом ответе действия были описаны от первого лица персонажа.
    """
    ACTOR = """Character: Сократ:
    Внешность: Сократ описывался как обычного вида человек, среднего роста, с бородой и умным, проницательным взглядом. Его внешность обычно не привлекала особого внимания, но его глубокие мысли и харизма делали его выдающимся среди собеседников.
    Характер: Сократ был известен своей скромностью, настойчивостью и умением задавать вопросы. Он был неподкупенным и неутомимым в поисках истины, часто провоцируя дискуссии и споры для достижения глубокого понимания различных вопросов.
    Профессия: Хотя Сократ никогда не писал своих мыслей, он был известен как учитель, философ и наставник. Он проводил дискуссии и дебаты с различными людьми в Афинах, задавая им вопросы и помогая им развивать свои мысли.
    Статус: В социальном отношении, Сократ не был членом высшего слоя общества, а скорее представителем средних слоев. Он не стремился к богатству или власти, а сконцентрировался на развитии своего ума и поиске истины.
    Увлечения: Сократ был увлечен философией, этикой и вопросами морали. Он проводил много времени в обсуждении и анализе таких тем, как справедливость, добродетель и цель жизни. Кроме того, он уделял внимание наблюдению за природой и поведением людей в обществе.
    """
    ACTOR_YariyVagin ="""Character: Юрий Робертович Вагин
    Внешность:
    Конкретные детали о внешности Юрия Вагина не указаны в доступных источниках. Однако, его можно увидеть на фотографиях и видео на его YouTube-канале и сайте, где он часто выступает в качестве лектора и ведущего.
    Характер:
    В своих выступлениях и текстах Юрий Вагин проявляет себя как энергичный и увлеченный человек. Он активно вовлекается в психологическую практику, исследования и просветительскую деятельность, что говорит о его целеустремленности и желании помогать людям.
    Профессия:
    Психотерапевт, кандидат медицинских наук.
    Директор психологического центра.
    Автор множества книг по психологии и психотерапии.
    Статус:
    Известный специалист в области психотерапии и психологии.
    Активно занимается научными исследованиями, выступает на конференциях, ведет лекции и мастер-классы.
    Увлечения:
    Психология и психотерапия.
    Образовательная и просветительская деятельность.
    Написание книг и проведение онлайн-конференций и мастер-классов.
    """
    SEARCH_ACTOR = """Персонажем я называю любую известную личность.Дай описание персонажа такие как:
    Внешность,характер, профессия, статус, увлечении,дату жизни и смерти.
    Для персонажа:"""
    LOOK_QUESTION ="""Дай ответ для этого вопроса: """
    GIVE_ANSWER_LIKE = """И повтори стиль как здесь: """
    GIVE_ANSWER_WITH_CITATES = """Вам будет предоставлен документ, разделенный тройными кавычками, и вопрос. Ваша задача состоит в том, чтобы ответить на вопрос, используя только предоставленный документ, и процитировать отрывок (отрывки) документа, использованного для ответа на вопрос. Если документ не содержит информации, необходимой для ответа на этот вопрос, то просто напишите: «Недостаточно информации». Если ответ на вопрос предоставлен, он должен быть аннотирован цитатой. Используйте следующий формат для цитирования соответствующих отрывков"""
    GIVE_TENTATIVE_ANSWER = """Дай предположительный ответ на этот вопрос: """
    ARUCE_ANSWER = """Перед вами стоит задача оценить точность и актуальность ответа, предоставленного с помощью модели GPT.
    Ниже вы найдете конкретный вопрос, ответ модели GPT на этот вопрос и актуальную, проверенную информацию (называемую "Ground Truth").
    Ваша задача состоит в том, чтобы сравнить суть ответа модели GPT с фактическими данными, чтобы определить, точно ли ответ отвечает на вопрос.
    Незначительные расхождения в формате, такие как порядок следования значений или дополнительная информация, представленная в модели, не должны считаться неверными, если они не искажают основную информацию.
    Пожалуйста, предоставьте свою оценку в формате JSON:
    {{
    "Response": истина/ложь,
    "Reason": "[Объясните здесь. Если это правда, вы можете указать "Точно и уместно". Если это ложь, укажите конкретные неточности или несоответствия.]",
    }}

    Question asked to the GPT model: {question}

    GPT model's response: '{answer}'

    Ground Truth information: '{ground_truth}'
    
    Основываясь на фактических данных, определите точность и актуальность ответа модели GPT. В ваших выходных данных не должно быть текста, отличающегося от указанного в JSON-формате.
    """
    REQUEST = ""
    ANSWER_GPT = ""
    ACTUAL_ANSWER = ""
    SCORE_ROLE = """Шаг 1. Ответь на следующие вопросы относительно переданным "вопроса:", "оригинальный ответ:", "гипотетический ответ:", Заключите всю свою работу для этого шага в тройные кавычки (\"\"\").
    Шаг 2. По результату ответов дай оценку схожести текстов в процентном соотношении. Если невозможно оценить схожесть тогда ее оценка 0%. Заключите всю свою работу для этого шага в тройные кавычки (\"\"\").
    Шаг 3. Дай оценку в виде: "Score:75%"
    1. Соответствуют ли ответы по теме вопроса?
    2. Ответы верные по своей сути?
    3. Есть ли в наличии рассуждение вопроса для предоставления ответа?
    4. Уместно ли рассуждения к теме разговора?
    5. Является ли ответ сухим и без эмоциональным?
    """

if __name__ == "__main__":
    pass
    # prompt = Prompt
    # text_short = "Это короткий текст."
    # expected_short = ["Это короткий текст."]
    # assert prompt.split_text(text_short) == expected_short, "Тест на короткий текст не пройден"
    
    # text_multiple_paragraphs = "Первый абзац. Второй абзац. Третий абзац."
    # expected_multiple_paragraphs = ["Первый абзац. Второй абзац. Третий абзац."]
    # assert prompt.split_text(text_multiple_paragraphs) == expected_multiple_paragraphs, "Тест на текст с несколькими абзацами не пройден"
   
    # text_long_single_paragraph = "Текст с длиной больше 15000 символов. " * 1000
    # print(len(text_long_single_paragraph))
    # expected_long_single_paragraph = ["Текст с длиной больше 15000 символов. " * 394,"Текст с длиной больше 15000 символов. " * 394,"Текст с длиной больше 15000 символов. " * 212]
    # print(len(expected_long_single_paragraph[0]))
    # ans = prompt.split_text(text_long_single_paragraph)

    # with open('1.txt', 'w', newline='', encoding='utf-8') as file:
    #         file.write(f" '{ans}' \n\n '{expected_long_single_paragraph}'")
    # for i in range(len(ans)):
    #     print(f"a: {len(ans[i])} r: {len(expected_long_single_paragraph[i])}")
    # #print(ans)
    # #assert prompt.split_text(text_long_single_paragraph) == expected_long_single_paragraph, "Тест на текст с одним длинным абзацем не пройден"
    
    # text_empty = ""
    # expected_empty = [""]
    # assert prompt.split_text(text_empty) == expected_empty, "Тест на пустой текст не пройден"
